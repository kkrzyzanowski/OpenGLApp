#pragma once
#include <vector>
enum  ShapeType
{
	TRIANGLE, PLANE, CUBE, SPEHERE, SKYBOX, LINE, TERRAIN, CUSTOM
};
enum LightType
{
	DEFAULT = 0,
	DIRECTIONAL = 1,
	POINT = 2,
	SPOTLIGHT = 3,
	NONELIGHT = 4,
};

enum SourceShapeType
{
	SHAPE = 0,
	LIGHT = 1,
	PARTICLE = 2,
	PRIMITIVE = 3,
	NO_TYPE
};

enum Shading
{
	FORWARD_SHADING = 0,
	DEFFERED_SHADING = 1,
	ONLY_COLOR = 2,
	TEXTURE_COLOR = 3,
	DISPLACEMENT = 4,
	CUBEMAP = 5,
	HDR_SHADING = 6,
	BLOOM = 7
}; // by bytes to-do

enum class CamView
{
	STATIC = 0, DYNAMIC = 1, MOVABLE = 2
};

enum class ShapeState
{
	CREATING, EXISTING, NOT_EXISTING
};

enum Direction
{
	UP, DOWN, LEFT, RIGHT, FORWARD, BACKWARD
};
enum FrameBufferType
{
	POSTPROCESSING = 32, BLUR = 2, HDR = 4, DEPTHMAP = 8, GBUFFER = 16, GAUSSIAN_HORIZONTAL = 1, GAUSSIAN_VERTICAL = 0, COLOR = 64, MAIN = 128
};

enum class ShaderFunctionType
{
	SHADER_FUNC_BLOOM, SHADER_FUNC_HDR, SHADER_FUNC_LIGHT_DIFFUSE, SHADER_FUNC_DIFFUSE, SHADER_FUNC_PICKING, SHADER_FUNC_DISPLACEMENT,
	SHADER_FUNC_INSTANCED_TERRAIN, SHADER_FUNC_LIGHT_SHADOW, SHADER_FUNC_GBUFFER, SHADER_FUNC_FINAL_BLOOM, SHADER_FUNC_UPDATE_BLOOM,
	SHADER_FUNC_UPDATE_MODEL, SHADER_FUNC_UPDATE_COLOR, SHADER_FUNC_UPDATE_COLOR_NO_ALPHA, SHADER_FUNC_UPDATE_TEXTURE,
	SHADER_FUNC_PASS_LIGHT_MATRIX_DATA, SHADER_FUNC_UPDATE_MODEL_WITH_COLOR, SHADER_FUNC_UPDATE_MODEL_COLOR_AND_TEXTURE,
	SHADER_FUNC_UPDATE_LIGHTNING_HDR, NO_SHADER_FUNCTION
};

